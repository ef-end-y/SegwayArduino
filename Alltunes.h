#ifndef ALLTUNES_H
#define ALLTUNES_H

#define LOG Serial3
#define SERIAL_LOG_SPEED 115200L

/*
 Расскомментировать DEBUG для тестов и настроек.

 Если DEBUG =
      --- Двигатели отключены ---
   1: логирование данных с датчиков + вычесленные углы
   2: логирование вычесленных углов также и от дублирующих датчиков
   5: логирование времени для каждого цикла. В бою MAIN_PERIOD должен быть больше этого времени
   7: калибровка акселерометра
   8: логирование данных с руля
      --- Двигатели работают ---
   10: тестирование мотора - небольшая скорость вперед, пауза, назад и по кругу
   11: логирование угла и мощности на двигатели
   12: логирование данных с датчиков
   13: zaryad batarei i motor amps

*/
#define DEBUG 13

// ограничение максимальной мощности на двигатели. 1000 - полная мощность
#define MAX_SPEED 1000

// период управления всеми процессами, мкс
#define MAIN_PERIOD 20000

// критический угол, свыше которого стоп машина
#define STOP_ANGLE 60
// сколько циклов необходимо превышать угол, чтобы начать останавливать двигатели - защита от случайного превышения угла при глюке
#define STOP_ANGLE_COUNT 5
// за какое количество секунд нужно остановить двигатель, в случае проблем - чтобы не слететь с сегвея по инерции
#define STOP_ENGINE_SEC 2

// уровеь заряда батареи, ниже которого зажгется индикация "низкий уровень батареи"
#define LOW_VOLTS_BATERRY 37.5

/*
   --- Настройки двигателя ---

 если драйвер двигателя sabertooth:

#define SABERTOOTH
#define SABERTOOTH_PORT 128

 если драйвер двигателя RobotEq:

#define ROBOTEQ
#define ROBOTEQ_SERIAL Serial2

*/

#define ROBOTEQ
#define ROBOTEQ_SERIAL Serial2

// --- Настройки PID ----

// Степень сглаживания результата (силы на двигатели). Например:
//  3 - берется среднее значение за 3 цикла
//  1 - без сглаживания
#define SPEED_SMOOTH      1

// Степень сглаживания дифференциальной составляющей. Например:
//  3 - берется среднее значение за 3 цикла
//  1 - без сглаживания
#define SPEED_A_SMOOTH    1

// Коэффициент пропорциональной составляющей
#define KP        1.2
// Точка отсчета пропорциональной составляющей.  Например,
// если установить в 8, то при 1 градусе наклона будет подано 8 единиц
// пропорциональной силы, при 2 градусах - 9 силы, 3 - 10 и т.д
#define KP_START  0
// Степень пропорциональной составляющей. Можно меньше 1.
// Это возведение в степень! Т.е брать не сильно большие значения, например,
// 1.1 или 0.9
#define KP_POW    1.5

// Коэффициент интегральной составляющей
#define KI        0

// Коэффициент дифференциальной составляющей
#define KD        0


// руль подсоединен к порту:
#define STEERING_WHEEL A4

// --- Вычисление угла ---

// Если определено, угол по акселерометру вычисляется новым способом
#define NEW_ANGLE_METHOD

/*
  Новый способ вычисления угла:
  
  Запоминаются абсолютные абстрактные показания акселерометра при старте системы.
  По данным устройства из даташита известно сколько в единицах акселерометра будет величина G.
  Искомый угол - это половина угла вершины равнобедренного треугольника построенного по точкам:
     - начальные показания акселерометра
     - текущие
     - точка пересечения окружностей с радиусами G и центрами в вышеуказанных точках
  
  Старый способ:
  
  Необходима калибровка акселерометра: опытным путем вычисляются абстрактные значения датчика в
  нулевых положениях.
  В момент старта вычисляется вектор G. Искомый угол - это угол между начальным вектором ускорения
  и текущим. Кроме того, на датчик действуют дополнительные ускорения, если абсолютная величина
  вектора ускорения больше G, то в алгоритме уменьшается влияния угла по акселерометру на итоговое
  значение - идет бОльшее доверие гироскопу
*/

// --- Только для старого метода вычисления угла ---

// Максимальное значения коэффициента K, т.е. когда на устройство действует
// только земное притяжение и мы максимально доверяем углу через акселерометр
#define K_MAX     0.02

// Минимальное значение коэффициента, когда действуют значительные допускорения
#define K_MIN     0.002

// Во сколько раз текущее значение ускорения должно превышать G чтобы k стал равным K_MIN. 
#define ACC_MAX   1.4

// Адрес гироскопа
#define ITG3200_ADDR 0x68

#endif


